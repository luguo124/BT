<?php
// +----------------------------------------------------------------------
// | 宝塔服务器助手[Linux面板]
// +----------------------------------------------------------------------
// | Copyright (c) 2015-2016 宝塔软件(http://bt.cn) All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
// +----------------------------------------------------------------------
// | Author: 黄文良 <2879625666@qq.com>
// +----------------------------------------------------------------------

//----------------------------------
// 服务器状态
//----------------------------------
include_once './Common.php';
/**
 * 设置新密码
 * @param array $_POST 密码数组
 * @return json
 */
function setPassword(){
	//判断数据是否完整
	if($_POST['password1'] == ''){
		returnJson(false, '错误，新密码不能为空!');
	}
	//判断密码是否一致
	if($_POST['password1'] != $_POST['password2']){
		returnJson(false, '错误，两次输入的密码不一致!');
	}
	//提交数据库
	$SQL = M('user');
	if($SQL->where("id='1'")->setField('password',md5(I('post.password1'))))
	{
		returnJson(true, '修改成功!');
	}
	returnJson(false, '修改失败!');
}

//检查与更新版本
function update(){
	//取回远程版本信息
	if(isset($_SESSION['updateInfo'])){
		$updateInfo = $_SESSION['updateInfo'];
	}else{
		$updateInfo = json_decode(httpGet('http://www.bt.cn/Api/updateLinuxClient'),1);
		if(empty($updateInfo)) returnJson(false,"连接云端服务器失败!");
		session('updateInfo', $updateInfo);
	}
	
	
	
	//检查是否需要升级
	if($updateInfo['version'] == $_SESSION['info-n']){
		returnJson(false,"当前已经是最新版本!");
	}
	
	//是否执行升级程序
	if($updateInfo['force'] == true || $_GET['toUpdate'] == 'yes'){
		$result = SendSocket("UpdateWeb|".$updateInfo['downUrl']);
		if($result['status'] == true){
			session('info-n', $updateInfo['version']);
			returnJson(true,'成功升级到'.$updateInfo['version']);
		}
		returnJson(false,'文件下载失败!');
	}
	//输出新版本信息
	$data = array(
		'status' => true,
		'version'=> $updateInfo['version'],
		'updateMsg'=> $updateInfo['updateMsg']
	);
	ajax_return($data);
}


//接口动作
if(isset($_GET['action'])){
	$_GET['action']();
	exit;
}
//取磁盘
$Disk = SendSocket("System|disk");
if(!is_array($Disk)) $Disk = array();
if(empty($Disk[0])){
	for($i=1;$i<count($Disk)+1;$i++){
		$Disk[$i]['使用率'] = ceil(($Disk[$i]['总容量'] - $Disk[$i]['可用空间']) / ($Disk[$i]['总容量'] / 100)); 
	}
}

//包含头部HTML
include_once './public/head.html';
include_once './public/menu.html';
?>
<div class="main-content">
			<div class="container-fluid">
				<div class="pos-ser">
					<div class="position">
						<a href="/index.php">首页</a>/<span>服务器状态</span>
					</div>
				</div>
				<div class="system-info">
					<div class="tips">
						系统: <span id="info"> 获取中</span>&#12288;&#12288;&#12288;已不间断运行: <span style="color:green;" id="running"> 获取中</span>
						<span style="position:relative;left: 50px;">
							版本: <span id="btversion" style="color: green;"><?php echo @$_SESSION['info-n'];?></span>
							<span id="toUpdate"></span>
						</span>
					</div>
					<div class="list-serve">
					<ul>
						<li>
							<div class="serve-box">
								<h3>网站</h3>
								<div class="server-box-right">
									<h4><?php echo @$_SESSION['server_count']['sites']; ?>个</h4>
									<p>在此添加以及管理服务器上的网站</p>
									<div class="sbr-btn">
										<a href="/site.php">管理</a>|<a href="javascript:;" onclick="webAdd(0)">添加</a>
									</div>
								</div>
							</div>
						</li>
						<li>
							<div class="serve-box">
								<h3>FTP</h3>
								<div class="server-box-right">
									<h4><?php echo @$_SESSION['server_count']['ftps']; ?>个</h4>
									<p>在此添加以及管理服务器上的FTP</p>
									<div class="sbr-btn">
										<a href="/ftp.php">管理</a>|<a href="javascript:;" onclick="ftpAdd(0)">添加</a>
									</div>
								</div>
							</div>
						</li>
						<li>
							<div class="serve-box">
								<h3>数据库</h3>
								<div class="server-box-right">
									<h4><?php echo @$_SESSION['server_count']['databases']; ?>个</h4>
									<p>在此添加以及管理服务器上的数据库</p>
									<div class="sbr-btn">
										<a href="/database.php">管理</a>|<a href="javascript:;" onclick="DataAdd(0)">添加</a>
									</div>
								</div>
							</div>
						</li>
					</ul>
				</div>
				</div>
				<div class="server">
					<div class="s-title">
						<h3>服务器使用情况</h3>
						<a href="javascript:;" onclick="getInfo()">刷新</a>
					</div>
					<div class="server-circle">
						<ul>
							<li>
								<h3>CPU使用率</h3>
								<div class="circle">
									<div class="pie_left">
										<div class="left"></div>
									</div>
									<div class="pie_right">
										<div class="right"></div>
									</div>
									<div class="mask"><span id="state">0</span>%</div>
									
								</div>
								<h4 id="core">获取中</h4>
							</li>
							<li>
								<h3>内存使用率</h3>
								<div class="circle">
									<div class="pie_left">
										<div class="left"></div>
									</div>
									<div class="pie_right">
										<div class="right"></div>
									</div>
									<div class="mask"><span id="left">0</span>%</div>
								</div>
								<h4 id="memory">获取中</h4>
							</li>
							<?php foreach($Disk as $value){ ?>
								<li>
									<h3><?php echo $value['分区']; ?></h3>
									<div class="circle">
										<div class="pie_left">
											<div class="left"></div>
										</div>
										<div class="pie_right">
											<div class="right"></div>
										</div>
										<div class="mask"><span><?php echo $value['使用率']; ?></span>%</div>
									</div>
									<h4><?php echo $value['可用空间'].'/'.$value['总容量']; ?>(GB)</h4>
								</li>
							<?php } ?>
						</ul>
					</div>
				</div>
				<div class="span6">
					<div class="bw">
						<div class="bg">
						<div class="bw-title">网络流量</div>
						<div class="bw-info">
							<ul>
								<li class="bi-line"><span>上行速度</span><a id="upSpeed">获取中</a></li>
								<li class="bi-line"><span>下行速度</span><a id="downSpeed">获取中</a></li>
								<li><span>总发送</span><a id="upAll">获取中</a></li>
								<li><span>总接收</span><a id="downAll">获取中</a></li>
							</ul>
						</div>
						<div id="NetImg" style="width:98%;height:330px;"></div>
						</div>
					</div>
				</div>
				<div class="span6">
					<div class="bw zun-updata">
					<div class="bg">
					<div class="bw-title">版本更新</div>
					<div class="DrawRecordCon mCustomScrollbar">
						
					</div>
					</div>
					</div>
				</div>
			</div>
		</div>
		</div>
		<?php include_once './public/footer.html'; ?>
		<script type="text/javascript" src="/public/js/highcharts.js"></script>
		<script type="text/javascript" src="/public/js/web.js"></script>
		<script type="text/javascript" src="/public/js/ftp.js"></script>
		<script type="text/javascript" src="/public/js/data.js"></script>
		<script type="text/javascript" src="/public/js/server.js"></script>
		<script type="text/javascript" src="/public/js/jquery.mCustomScrollbar.concat.min.js"></script>
		<script type="text/javascript">
		$(function(){
			$(window).on("load",function(){
				$(".DrawRecordCon").mCustomScrollbar("scrollTo");
			})
		})
		</script>
		<script type="text/javascript">
			setCookie('phpmodel','<?php echo $_SESSION['phpmodel']; ?>');
			function getInfo() {
				var loadT = layer.load({
					shade: true,
					shadeClose: false
				});
				$.get("/Ajax.php?action=systemInfo&name=info", function(info) {
					$("#memory").html(info.内存容量);
					$("#left").html(Math.floor((parseInt(info.内存容量) - parseInt(info.剩余内存)) / (parseInt(info.内存容量) / 100)));
					$("#info").html(info.系统版本);
					$("#running").html(info.已运行);
					setImg();
				});
				$.ajax({
					url: "/Ajax.php?action=systemInfo&name=cpu",
					async: true,
					success: function(cpu) {
						$("#core").html(cpu.核心数 + " 核心");
						$("#model").html(cpu.型号);
						$("#state").html(cpu.使用率);
						layer.close(loadT);
						setImg();
					}
				});
			}
		
			getInfo();
			
			function getNet(){
				var up;
				var down;
				$.ajax({
					type:"get",
					url:"/Ajax.php?action=GetNetTotal",
					async:true,
					success:function(net){
						$("#InterfaceSpeed").html("接口速率： 1.0Gbps");
						$("#upSpeed").html(net.up);
						$("#downSpeed").html(net.down);
						$("#downAll").html(net.downTotal);
						$("#upAll").html(net.upTotal);
						up = net.up.substring(0,net.up.length - 3)
						down = net.down.substring(0,net.down.length - 3)
						setCookie("upNet",Number(up) + Number(down));
					}
				});
				var result = Number(getCookie("upNet"));
				return result;
			}
		
			$(document).ready(function() {                                                  
				Highcharts.setOptions({                                                     
					global: {                                                               
						useUTC: false                                                       
					}                                                                       
				});                                                                         
																							
				var chart;                                                                  
				$('#NetImg').highcharts({                                                
					chart: {                                                                
						type: 'spline',                                                     
						animation: Highcharts.svg, // don't animate in old IE               
						marginRight: 10,                                                    
						events: {                                                           
							load: function() {                            														        
								var series = this.series[0];                                
								setInterval(function() {                                    
									var x = (new Date()).getTime(), // 时间         
										y = getNet(); //取回流量数据
									series.addPoint([x, y], true, true);                    
								}, 2000);                                                   
							}                                                               
						}                                                                   
					},                                                                      
					title: {                                                                
						text: '接口流量实时'                                            
					},                                                                      
					xAxis: {                                                                
						type: 'datetime',                                                   
						tickPixelInterval: 100                                              
					},                                                                      
					yAxis: {                                                                
						title: {                                                            
							text: '上行+下行 KB/S'                                                   
						},                                                                  
						plotLines: [{                                                       
							value: 0,                                                       
							width: 1,                                                       
							color: '#eeeeee'                                                
						}]                                                                  
					},                                                                      
					tooltip: {                                                              
						formatter: function() {                                             
								return '<b>'+ this.series.name +'</b><br/>'+                
								Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) +'<br/>'+
								Highcharts.numberFormat(this.y, 2)+'KB';                         
						}                                                                   
					},                                                                      
					legend: {                                                               
						enabled: false                                                      
					},                                                                      
					exporting: {                                                            
						enabled: false                                                      
					},                                                                      
					series: [{                                                              
						name: '接口流量',                                                
						data: (function() {                                                                          
							var data = [],                                                  
								time = (new Date()).getTime(),                              
								i;                                                          							
							for (i = -9; i <= 0; i++){
								
								data.push({                                                 
									x: time + i * 1000,                                     
									y: 0                       
								});                                                         
							}                                                              
							return data;                                                    
						})()                                                                
					}]                                                                      
				});                                                                         
			});
			
			function setImg() {
				$('.circle').each(function(index, el) {
					var num = $(this).find('span').text() * 3.6;
					if (num <= 180) {
						$(this).find('.left').css('transform', "rotate(0deg)");
						$(this).find('.right').css('transform', "rotate(" + num + "deg)");
					} else {
						$(this).find('.right').css('transform', "rotate(180deg)");
						$(this).find('.left').css('transform', "rotate(" + (num - 180) + "deg)");
					};
				});
			
			}
			setImg();
			
			
			//检查更新
			$(function(){
				$.get('index.php?action=update',function(rdata){
					if(rdata.status == false) return;
					if(rdata.version != undefined){
						$("#toUpdate").html('<a href="javascript:updateVersion(\''+rdata.version+'\');">立即更新</a>');
						return;
					}
					layer.msg(rdata.msg,{icon:1});
				});
			});
			
			//开始升级
			function updateVersion(version){
				var loadT = layer.msg('正在升级面板..',{icon:16,time:10000});
				$.get('index.php?action=update&toUpdate=yes',function(rdata){
					layer.close(loadT);
					layer.msg(rdata.msg,{icon:rdata.status?1:5});
					if(rdata.status){
						$("#btversion").html(version);
					}
				});
			}
			
			//取升级日志
			$(function(){
				$.get('http://www.zun.gd/Api/getUpdateLogs',function(rdata){
					var body = '';
					for(var i=0;i<rdata.length;i++){
						body += '<div class="DrawRecord DrawRecordlist">\
								<div class="DrawRecordL">'+rdata[i].addtime+'<i></i></div>\
								<div class="DrawRecordR">\
									<h3>'+rdata[i].title+'</h3>\
									<p>'+rdata[i].body+'</p>\
								</div>\
							</div>'
					}
					$(".DrawRecordCon").html(body);
				},'jsonp');
			});
			
			
		</script>
	</body>
</html>
